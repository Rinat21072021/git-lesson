{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT-kamasutra\\\\todo3\\\\src\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = props => {\n  _s();\n\n  const [newTitle, setNewTitle] = useState('');\n  const onChangeT;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTitle,\n        onChange: e => {\n          setNewTitle(e.currentTarget.value);\n        },\n        onKeyPress: e => {\n          if (e.shiftKey && e.charCode == 13) {\n            props.addTask(newTitle);\n            {\n              setNewTitle('');\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.addTask(newTitle);\n          {\n            setNewTitle('');\n          }\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: t.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.removeTasks(t.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.chengFilter('All'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.chengFilter('Active'),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.chengFilter('Completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"yDL3i1zGI9aikOUmkxVbx2jwqbI=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/IT-kamasutra/todo3/src/TodoList.tsx"],"names":["React","useState","TodoList","props","newTitle","setNewTitle","onChangeT","title","e","currentTarget","value","shiftKey","charCode","addTask","tasks","map","t","isDone","removeTasks","id","chengFilter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAgBA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAyB;AAAA;;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMK,SAAN;AACA,sBACI;AAAA,4BACI;AAAA,gBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEH,QAAd;AACO,QAAA,QAAQ,EAAGI,CAAD,IAAO;AACbH,UAAAA,WAAW,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACH,SAHR;AAIO,QAAA,UAAU,EACLF,CAAD,IAAO;AACH,cAAIA,CAAC,CAACG,QAAF,IAAcH,CAAC,CAACI,QAAF,IAAc,EAAhC,EAAoC;AAChCT,YAAAA,KAAK,CAACU,OAAN,CAAcT,QAAd;AACA;AACIC,cAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ;AACJ;AAZZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AACI,QAAA,OAAO,EAAE,MAAM;AACXF,UAAAA,KAAK,CAACU,OAAN,CAAcT,QAAd;AACA;AACIC,YAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,SANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eA4BI;AAAA,gBACKF,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,iBAAO;AAAA,gCAAI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,EAAEA,CAAC,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAJ,eAChB;AAAA,oBAAOD,CAAC,CAACT;AAAT;AAAA;AAAA;AAAA;AAAA,gBADgB,eAEhB;AAAQ,UAAA,OAAO,EAAE,MAAM;AACnBJ,YAAAA,KAAK,CAACe,WAAN,CAAkBF,CAAC,CAACG,EAApB;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFgB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB;AADL;AAAA;AAAA;AAAA;AAAA,YA5BJ,eAwCI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMhB,KAAK,CAACiB,WAAN,CAAkB,KAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMjB,KAAK,CAACiB,WAAN,CAAkB,QAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAMjB,KAAK,CAACiB,WAAN,CAAkB,WAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CAnDM;;GAAMlB,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nexport type FilterValueType = 'All' | 'Active' | 'Completed'\r\nexport type tasks1Type = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\nexport type TodoListType = {\r\n    title: string\r\n    tasks: Array<tasks1Type>\r\n    removeTasks: (id: string) => void\r\n    chengFilter: (value: FilterValueType) => void\r\n    addTask: (title: string) => void\r\n}\r\n\r\nexport const TodoList = (props: TodoListType) => {\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const onChangeT\r\n    return (\r\n        <div>\r\n            <h3>{props.title}</h3>\r\n            <div>\r\n                <input value={newTitle}\r\n                       onChange={(e) => {\r\n                           setNewTitle(e.currentTarget.value)\r\n                       }}\r\n                       onKeyPress={\r\n                           (e) => {\r\n                               if (e.shiftKey && e.charCode == 13) {\r\n                                   props.addTask(newTitle);\r\n                                   {\r\n                                       setNewTitle('')\r\n                                   }\r\n                               }\r\n                           }\r\n                       }\r\n                />\r\n                <button\r\n                    onClick={() => {\r\n                        props.addTask(newTitle);\r\n                        {\r\n                            setNewTitle('')\r\n                        }\r\n                    }}>+\r\n                </button>\r\n\r\n            </div>\r\n            <ul>\r\n                {props.tasks.map((t) => <li><input type=\"checkbox\" checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={() => {\r\n                            props.removeTasks(t.id)\r\n                        }}>x\r\n                        </button>\r\n                    </li>\r\n                )}\r\n\r\n\r\n            </ul>\r\n            <div>\r\n                <button onClick={() => props.chengFilter('All')}>All</button>\r\n                <button onClick={() => props.chengFilter('Active')}>Active</button>\r\n                <button onClick={() => props.chengFilter('Completed')}>Completed</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}