{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT-kamasutra\\\\todo3\\\\src\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = props => {\n  _s();\n\n  const [newTitle, setNewTitle] = useState('');\n\n  const onChangeHandler = e => {\n    setNewTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressEnterHandler = e => {\n    if (e.shiftKey && e.charCode == 13) {\n      props.addTask(newTitle);\n      {\n        setNewTitle('');\n      }\n    }\n  };\n\n  const onClickHandler = () => {\n    props.addTask(newTitle);\n    {\n      setNewTitle('');\n    }\n  };\n\n  const buttonAllOnClick = () => props.chengFilter('All');\n\n  const buttonActiveOnClick = () => props.chengFilter('Active');\n\n  const buttonCompletedOnClick = () => props.chengFilter('Completed');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTitle,\n        onChange: onChangeHandler,\n        onKeyPress: onKeyPressEnterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: t.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              props.removeTasks(t.id);\n            },\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buttonAllOnClick,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buttonActiveOnClick,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buttonCompletedOnClick,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"yDL3i1zGI9aikOUmkxVbx2jwqbI=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/IT-kamasutra/todo3/src/TodoList.tsx"],"names":["React","useState","TodoList","props","newTitle","setNewTitle","onChangeHandler","e","currentTarget","value","onKeyPressEnterHandler","shiftKey","charCode","addTask","onClickHandler","buttonAllOnClick","chengFilter","buttonActiveOnClick","buttonCompletedOnClick","title","tasks","map","t","isDone","removeTasks","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;;AAgBA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAyB;AAAA;;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMK,eAAe,GAAIC,CAAD,IAAsC;AAC1DF,IAAAA,WAAW,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACH,GAFD;;AAGA,QAAMC,sBAAsB,GAAIH,CAAD,IAAwC;AACnE,QAAIA,CAAC,CAACI,QAAF,IAAcJ,CAAC,CAACK,QAAF,IAAc,EAAhC,EAAoC;AAChCT,MAAAA,KAAK,CAACU,OAAN,CAAcT,QAAd;AACA;AACIC,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ;AACJ,GAPD;;AAQA,QAAMS,cAAc,GAAG,MAAM;AACzBX,IAAAA,KAAK,CAACU,OAAN,CAAcT,QAAd;AACA;AACIC,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GALD;;AAMA,QAAMU,gBAAgB,GAAC,MAAMZ,KAAK,CAACa,WAAN,CAAkB,KAAlB,CAA7B;;AACA,QAAMC,mBAAmB,GAAC,MAAMd,KAAK,CAACa,WAAN,CAAkB,QAAlB,CAAhC;;AACA,QAAME,sBAAsB,GAAC,MAAMf,KAAK,CAACa,WAAN,CAAkB,WAAlB,CAAnC;;AACA,sBACI;AAAA,4BACI;AAAA,gBAAKb,KAAK,CAACgB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEf,QAAd;AACO,QAAA,QAAQ,EAAEE,eADjB;AAEO,QAAA,UAAU,EAAEI;AAFnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAA,gBACKX,KAAK,CAACiB,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,IAAM;AAEnB,4BAAO;AAAA,kCAAI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEA,CAAC,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAJ,eACH;AAAA,sBAAOD,CAAC,CAACH;AAAT;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAQ,YAAA,OAAO,EAAE,MAAM;AACnBhB,cAAAA,KAAK,CAACqB,WAAN,CAAkBF,CAAC,CAACG,EAApB;AACH,aAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAMM,OART;AADL;AAAA;AAAA;AAAA;AAAA,YAVJ,eAwBI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEV,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAtDM;;GAAMhB,Q;;KAAAA,Q","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\n\r\nexport type FilterValueType = 'All' | 'Active' | 'Completed'\r\nexport type tasks1Type = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\nexport type TodoListType = {\r\n    title: string\r\n    tasks: Array<tasks1Type>\r\n    removeTasks: (id: string) => void\r\n    chengFilter: (value: FilterValueType) => void\r\n    addTask: (title: string) => void\r\n}\r\n\r\nexport const TodoList = (props: TodoListType) => {\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTitle(e.currentTarget.value)\r\n    }\r\n    const onKeyPressEnterHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.shiftKey && e.charCode == 13) {\r\n            props.addTask(newTitle);\r\n            {\r\n                setNewTitle('')\r\n            }\r\n        }\r\n    }\r\n    const onClickHandler = () => {\r\n        props.addTask(newTitle);\r\n        {\r\n            setNewTitle('')\r\n        }\r\n    }\r\n    const buttonAllOnClick=() => props.chengFilter('All')\r\n    const buttonActiveOnClick=() => props.chengFilter('Active')\r\n    const buttonCompletedOnClick=() => props.chengFilter('Completed')\r\n    return (\r\n        <div>\r\n            <h3>{props.title}</h3>\r\n            <div>\r\n                <input value={newTitle}\r\n                       onChange={onChangeHandler}\r\n                       onKeyPress={onKeyPressEnterHandler}\r\n                />\r\n                <button onClick={onClickHandler}>+</button>\r\n\r\n            </div>\r\n            <ul>\r\n                {props.tasks.map((t) =>{\r\n\r\n                    return <li><input type=\"checkbox\" checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={() => {\r\n                            props.removeTasks(t.id)\r\n                        }}>x\r\n                        </button>\r\n                    </li>}\r\n                )}\r\n\r\n\r\n            </ul>\r\n            <div>\r\n                <button onClick={buttonAllOnClick}>All</button>\r\n                <button onClick={buttonActiveOnClick}>Active</button>\r\n                <button onClick={buttonCompletedOnClick}>Completed</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}