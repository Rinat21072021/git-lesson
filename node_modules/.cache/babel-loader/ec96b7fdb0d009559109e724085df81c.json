{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT-kamasutra\\\\todo3\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v1 } from 'uuid';\nimport './App.css';\nimport { TodoList } from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: 'CSS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'JavaScript',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'React',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'React',\n    isDone: false\n  }]);\n  let [filter, setFilter] = useState('All');\n  let tasksForTodoList = tasks;\n\n  if (filter === 'Active') {\n    tasksForTodoList = tasks.filter(t => t.isDone);\n  }\n\n  if (filter === 'Completed') {\n    tasksForTodoList = tasks.filter(t => !t.isDone);\n  }\n\n  function chengFilter(value) {\n    setFilter(value);\n  }\n\n  function removeTasks(id) {\n    let filterTasks = tasks.filter(t => t.id !== id);\n    setTasks(filterTasks);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(TodoList, {\n      title: 'What to learn',\n      tasks: tasksForTodoList,\n      removeTasks: removeTasks,\n      chengFilter: chengFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"WFyXWzT9AcTAe8GticvNundILHc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/IT-kamasutra/todo3/src/App.tsx"],"names":["React","useState","v1","TodoList","App","tasks","setTasks","id","title","isDone","filter","setFilter","tasksForTodoList","t","chengFilter","value","removeTasks","filterTasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;;;AAGA,SAASC,GAAT,GAAc;AAAA;;AACV,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAmBL,QAAQ,CAAqB,CAChD;AAACM,IAAAA,EAAE,EAACL,EAAE,EAAN;AAAUM,IAAAA,KAAK,EAAC,KAAhB;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GADgD,EAEhD;AAACF,IAAAA,EAAE,EAACL,EAAE,EAAN;AAAUM,IAAAA,KAAK,EAAC,YAAhB;AAA8BC,IAAAA,MAAM,EAAE;AAAtC,GAFgD,EAGhD;AAACF,IAAAA,EAAE,EAACL,EAAE,EAAN;AAAUM,IAAAA,KAAK,EAAC,OAAhB;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAHgD,EAIhD;AAACF,IAAAA,EAAE,EAACL,EAAE,EAAN;AAAUM,IAAAA,KAAK,EAAC,OAAhB;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAJgD,CAArB,CAA/B;AAMA,MAAI,CAACC,MAAD,EAASC,SAAT,IAAqBV,QAAQ,CAAmB,KAAnB,CAAjC;AACA,MAAIW,gBAAgB,GAACP,KAArB;;AACA,MAAGK,MAAM,KAAG,QAAZ,EAAqB;AACjBE,IAAAA,gBAAgB,GAACP,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAEA,CAAC,CAACJ,MAAlB,CAAjB;AACH;;AACD,MAAGC,MAAM,KAAG,WAAZ,EAAwB;AACpBE,IAAAA,gBAAgB,GAACP,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAE,CAACA,CAAC,CAACJ,MAAnB,CAAjB;AACH;;AACD,WAASK,WAAT,CAAqBC,KAArB,EAA2C;AACvCJ,IAAAA,SAAS,CAACI,KAAD,CAAT;AACH;;AACL,WAASC,WAAT,CAAqBT,EAArB,EAA+B;AAC3B,QAAIU,WAAW,GAACZ,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAEA,CAAC,CAACN,EAAF,KAASA,EAAzB,CAAhB;AACAD,IAAAA,QAAQ,CAACW,WAAD,CAAR;AACH;;AACG,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,eAAjB;AACU,MAAA,KAAK,EAAEL,gBADjB;AAEU,MAAA,WAAW,EAAEI,WAFvB;AAGU,MAAA,WAAW,EAAEF;AAHvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAjCQV,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport { v1 } from 'uuid';\nimport './App.css';\nimport {TodoList} from \"./TodoList\";\nimport {tasks1Type,} from './TodoList'\ntype FilterValueType= 'All' | 'Active' | 'Completed'\nfunction App(){\n    let [tasks, setTasks]= useState<Array <tasks1Type>>([\n        {id:v1(), title:'CSS', isDone: true},\n        {id:v1(), title:'JavaScript', isDone: true},\n        {id:v1(), title:'React', isDone: false},\n        {id:v1(), title:'React', isDone: false},\n    ])\n    let [filter, setFilter]= useState <FilterValueType>('All')\n    let tasksForTodoList=tasks\n    if(filter==='Active'){\n        tasksForTodoList=tasks.filter(t=>t.isDone)\n    }\n    if(filter==='Completed'){\n        tasksForTodoList=tasks.filter(t=>!t.isDone)\n    }\n    function chengFilter(value:FilterValueType){\n        setFilter(value)\n    }\nfunction removeTasks(id:number){\n    let filterTasks=tasks.filter(t=>t.id !== id)\n    setTasks(filterTasks)\n}\n    return (\n        <div className=\"App\">\n            <TodoList title={'What to learn'}\n                      tasks={tasksForTodoList}\n                      removeTasks={removeTasks}\n                      chengFilter={chengFilter}\n            />\n\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}